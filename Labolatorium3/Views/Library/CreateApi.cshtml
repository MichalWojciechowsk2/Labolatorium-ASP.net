@using ModelsLibrary;
@model Book


<h1>Add book to the shelf</h1>
<form asp-controller="Library" asp-action="AddBook" method="post">
    <div class="mb-3">
        <label asp-for="Title">Title</label>
        <input class="form-control" asp-for="Title" />
        <span class="text-danger" asp-validation-for="Title"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Author">Author</label>
        <input class="form-control" asp-for="Author" />
        <span class="text-danger" asp-validation-for="Author"></span>
    </div>
    <div>
        <label asp-for="Priority"></label>
        <div>
            <span asp-validation-for="Priority" class="text-danger"></span>
        </div>
        <select class="form-control" asp-for="Priority" asp-items="@Html.GetEnumSelectList<Priority>()"></select>
    </div>
    <div class="mb-3">
        <label asp-for="NumberOfPages">Number Of Pages</label>
        <input class="form-control" asp-for="NumberOfPages" />
        <span class="text-danger" asp-validation-for="NumberOfPages"></span>
    </div>
    <div class="mb-3">
        <label asp-for="ISBN">ISBN</label>
        <input class="form-control" asp-for="ISBN" />
        <span class="text-danger" asp-validation-for="ISBN"></span>
    </div>
    <div class="mb-3">
        <label asp-for="PublicationDate">Publication Date</label>
        <input class="form-control" asp-for="PublicationDate" />
        <span class="text-danger" asp-validation-for="PublicationDate"></span>
    </div>
    <div class="mb-3">
        <label asp-for="PublishingHouse">Publishing House</label>
        <input class="form-control" asp-for="PublishingHouse" />
        <span class="text-danger" asp-validation-for="PublishingHouse"></span>
    </div>
    <div class="mb-3">
        <label>Organization filter</label>
        <input type="text" name="filter" id="filter" />
        <select class="form-control" id="OrganizationId"></select>
    </div>
    <div class="mb3">
        <button type="submit" class="btn btn-primary"> Add </button>
    </div>
</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let select = document.getElementById("OrganizationId");
            let filter = document.getElementById("filter");

            filter.addEventListener("input", function () {
                let inputValue = filter.value.trim();

                if (inputValue.length === 0) {
                    return;
                }

                fetch(`/api/organizations?filter=${inputValue}`)
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                        throw new Error("Failed to fetch organizations");
                    })
                    .then(json => {
                        console.log('Received JSON data:', json);

                        select.innerHTML = '';
                        for (let organization of json) {
                            let option = document.createElement('option');
                            option.value = organization.id;
                            option.text = organization.title;
                            select.add(option);
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching organizations:', error.message);
                    });
            });
        });
    </script>
}